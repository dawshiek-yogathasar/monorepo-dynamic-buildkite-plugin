#!/bin/bash
set -eo pipefail

# Set Base Working Directory 
basedir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"

. "$basedir/lib/diff.bash"
. "$basedir/lib/lighthouse.bash"
. "$basedir/lib/shared.bash"
. "$basedir/lib/commands.bash"
. "$basedir/lib/trigger.bash"

#Global used across files
upload_pipeline_jobs=();
pipeline_yml=();

# Run Diff
diff_Changes=$(run_diff)
index_of_pipeline_changes "$diff_Changes"


if [ "${#upload_pipeline_jobs[@]}" -eq 0 ]; then
  echo "No changes detected"
else
    for pipeline_index in "${upload_pipeline_jobs[@]}";
    do
      echo >&2 "Pipeline Index: $pipeline_index"
      validate_trigger=$(read_pipeline_config "$pipeline_index" "TRIGGER")
      validate_pipeline=$(read_pipeline_commands_config "$pipeline_index" "LABEL")
      echo >&2 "Trigger Data: $validate_trigger"
      echo >&2 "Pipeline Data: $validate_pipeline"
      if [[ -n $validate_trigger ]] || [[ -n $validate_pipeline ]]; then
        #Output Details in Debug Mode
        break
      else
        echo "Invalid config. No Trigger or Pipeline not defined in path config"
        exit 1
      fi
    done
  
    pipeline_yml+=("steps:")
    generate_pipeline_yml
    generate_command_pipeline_yml
    output=$(printf '%s\n' "${pipeline_yml[@]}")

    if [[ -n ${DEBUG:-} ]] ; then
        echo >&2 "$output"
    fi
    echo "$output" | buildkite-agent pipeline upload
fi